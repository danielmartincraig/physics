<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/css/bootstrap.min.css" integrity="sha384-Smlep5jCw/wG7hdkwQ/Z5nLIefveQRIY9nfy6xoR1uRYBtpZgI6339F5dgvm/e9B" crossorigin="anonymous">
    <% include ../partials/header.ejs %>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

    <script>
        function plotTrajectory(ctx, launchAngle, velocity) {
            let xVelocity = Math.cos(launchAngle * Math.PI / 180) * velocity;
            let yVelocity = Math.sin(launchAngle * Math.PI / 180) * velocity;

            let canvasHeight = ctx.canvas.height;

            let myProjectile = new projectile(xVelocity, yVelocity, 5);
            ctx.moveTo(0,0);
            while (myProjectile.y >= 0) {
                ctx.beginPath();
                ctx.rect(myProjectile.x + 20, canvasHeight - myProjectile.y - 20, myProjectile.squareSize, myProjectile.squareSize);
                ctx.stroke();
                myProjectile.advance();
            }
        }
    </script>

    <script>
        function drawTrajectories () {
            let myCanvas = document.getElementById("simCanvas");
            myCanvas.width = '800';
            myCanvas.height = '400';

            let ctx = myCanvas.getContext("2d");

            var grd=ctx.createLinearGradient(0,ctx.canvas.height,0,0);
            grd.addColorStop(0,"PowderBlue");
            grd.addColorStop(1,"white");

            ctx.fillStyle=grd;
            ctx.fillRect(0, 0, ctx.canvas.width,ctx.canvas.height);

            let checkedBoxes = document.querySelectorAll('input[name=trajectoryCheckbox]:checked');
            checkedBoxes.forEach((trajectory) => {
                plotTrajectory(ctx, trajectory.getAttribute("data-shotAngle"), trajectory.getAttribute("data-velocity"));
                console.log(`Plotting the trajectory: ${trajectory.getAttribute("data-shotAngle")}, ${trajectory.getAttribute("data-velocity")}`);
            })
        }

    </script>

</head>
<body>
<% include ../partials/nav.ejs %>

<h1>Physics Simulation</h1>

<div><canvas id="simCanvas" class= "img-responsive center-block">
    </canvas></div>

<script>

    class projectile {
        constructor (vx, vy, squareSize) {
            this.x = 0;
            this.y = squareSize;
            this.vx = vx;
            this.vy = vy;
            this.squareSize = squareSize
        }

        advance() {
            this.x += this.vx;
            this.y += this.vy;
            this.vy -= 9.8;
        }
    }

</script>

<div align="center">
    <form>
        Launch Angle: <input type="text" id="launchAngle" placeholder="45">
        Velocity: <input type="text" id="velocity" placeholder="50">
        <button id="newTrajectoryButton">New Trajectory</button>
        <button id="clearTrajectoriesButton">Clear Trajectories</button>
    </form>
</div>

<script>
    let newTrajectoryButton = document.getElementById("newTrajectoryButton");
    newTrajectoryButton.addEventListener('click', function(e) {
        e.preventDefault();
        let launchAngle = document.getElementById("launchAngle").value;
        let velocity = document.getElementById("velocity").value;

        let request = new XMLHttpRequest();

        request.onreadystatechange = function() {
            if(request.readyState === 4 && request.status === 200) {
                location.reload();
            }
        }

        request.open("post", "https://agile-depths-52131.herokuapp.com/sim", true);
        request.setRequestHeader("Content-type", "application/json");
        let data = JSON.stringify({"launchAngle":launchAngle, "velocity": velocity});
        request.send(data);
    });

</script>

<script>
    let clearTrajectoriesButton = document.getElementById("clearTrajectoriesButton");
    clearTrajectoriesButton.addEventListener('click', function(e) {
        e.preventDefault();

        let request = new XMLHttpRequest();

        request.onreadystatechange = function() {
            if(request.readyState === 4 && request.status === 200) {
                location.reload();
            }
        }

        request.open("delete", "https://agile-depths-52131.herokuapp.com/sim", true);
        request.send();
    });
</script>

<div class="container" align="center">
    <form class="form-check form-check-inline">
        <% trajectories.forEach(function(entry) { %>

        <label class="btn btn-primary">
            <input type="checkbox" class="form-check-input" name="trajectoryCheckbox" data-shotAngle='<%= entry["shot_angle"]%>' data-velocity='<%= entry["shot_velocity"]%>'>
            <p> <%= entry["shot_angle"] %>&deg </p>
            <p> <%= entry["shot_velocity"] %> mps </p>
        </label>

        <% }) %>
    </form>

</div>
<script>
    $(":checkbox").change(function() {
        drawTrajectories();
    });
</script>

<script>
    drawTrajectories();
</script>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js" integrity="sha384-o+RDsa0aLu++PJvFqy8fFScvbHFLtbvScb8AjopnFD+iEQ7wo/CG0xlczd+2O/em" crossorigin="anonymous"></script>

</body>
</html>
